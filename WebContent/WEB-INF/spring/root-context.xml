<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	 
	<bean id="ch09CommonService"
			class="com.company.web_ch09_01.service.Ch09CommonService">
	</bean>
	 
	<!-- 해당 파일에 접근하면 Ch09CommonService에 만약 @Service annotation을 가진다면 
		 servlet-context_ch09_01과 중복되기 때문에 불가능하다. -->
	<!-- 이렇게 선언된 bean은 servlet-context.xml과 servlet-context_ch09_01.xml
		 에서 선언된 위치에서 공용적으로 사용이 가능하다. -->
	<!-- 여기에 com.company.web_ch09_01.service.Ch09CommonService에 종속된 dao가 있다면
		 굳이 Annotation으로 @AutoWired를 하지 않아도 된다.
		 어차피 이미 bean으로 등록이 이루어 졌기 때문이다. -->
	
	<!-- 메이븐을 통해 기본 class는 가져온다. -->
	<!-- Oracle BD MS 의 jdbc 설정을 위함  -->
	<!-- javax.sql.DataSource -->
	<bean id="dataSource" class = "org.apache.commons.dbcp2.BasicDataSource"
			destroy-method="close">
		<!-- property의 value들은 WEB-INF/lib에 있는 .jar에서 가져온다. -->
		<property name="driverClassName" value="oracle.jdbc.OracleDriver">
		<!-- class는 ojdbc6.jar 내부 해당 경로에 있는 것을 불러온것이다 -->
		<!-- 링커 클래스로서 설정하는 것이다. -->
		</property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl">
		<!-- localhost:1521:orcl -->
		<!-- 각기 ip, 포트, DB PID -->
		</property>
		<property name="username" value="user"></property>
		<property name="password" value="iot12345"></property>
		<!-- 여기까지 연결 로그인을 위한 설정 -->
		<property name="initialSize" value="1"></property>
		<property name="maxTotal" value="2"></property>
		<property name="maxIdle" value="1"></property>
		<!-- password 이후부터 여기까지는 Connection 허용 범위 설정 -->
		<!-- maxTotal 은 최대 동시 연결 가능 수.
			 maxIdle은 최소 Connection 사이즈 -->
	</bean>
	
	<!-- 데이터 전달을 위한 ORM 공용 관리 객체 생성
		  여기서는 MyBatis를 사용한다. Maven으로 가져온것들이다. -->
	<!-- 여기는 구글링하거나 그냥 복사해라 딱히 경로설정하는 것 외에는 의미가 없다 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- bean태그 id가 dataSource인 것을 가져와 Connection Pool을 지정한다. ref는 setter 지정이다. -->
		<property name="mapperLocations" value="/WEB-INF/mybatis/*.xml"></property>
		<!-- MyBatis 설정파일 경로 지정 -->
	</bean>
	<!-- 실제로 전달하는 용도로 사용하는 관리 객체 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- constructor-arg까지 있어야 정상적으로 인식한다. -->
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
</beans>
